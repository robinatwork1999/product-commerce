name: Caching npm packages

on: push

jobs:
  wait:
   runs-on: ubuntu-latest
   steps:
    - uses: mktcode/consecutive-workflow-action@eb43c6b5852dd0e33efa797a1817196d06daa4b2
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
       fetch-depth: 0
    - name: Cache node modules
      id: cache-nodeq-modules
      uses: actions/cache@v2
      env:
        cache-name: cache-nodeq-modules
      with:
        # caching node_modules
        path: sample/node_modules
        key: ${{ runner.os }}-builds-${{ env.cache-name }}-${{ hashFiles('sample/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-builds-${{ env.cache-name }}-
          ${{ runner.os }}-builds-
          ${{ runner.os }}-
    - name: Install Dependencies
      if: steps.cache-nodeq-modules.outputs.cache-hit != 'true'
      run: cd sample && npm i --legacy-peer-deps
    - name: Echoooo
      run: cat package.json
    - name: ok  
      run: | 
        sleep 50
    - name: Pull The Latest Repository Changes
      run: git pull --no-rebase    
    - name: Extract New Version From Package File
      uses: sergeysova/jq-action@v2
      id: version
      with:
          cmd: "jq .version package.json -r"
    - name: Setup Configurations For New Version
      run: |
        echo "RELEASE_VERSION=${{ steps.version.outputs.value }}" >> $GITHUB_ENV

